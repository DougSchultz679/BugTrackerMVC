@model BugTracker.Models.TicketComment


@using (Html.BeginForm("Edit", "TicketComments", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Edit Ticket Comment</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.TicketId)
        @Html.HiddenFor(model => model.FileUrl)
        @Html.HiddenFor(model => model.Closed)

        <div class="form-group">
            <label class="control-label col-md-2">Ticket</label>
            <div class="col-md-10">
                @Model.Ticket.Title
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Body", new { @class = "form-control", @Id = "ck-replace" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if (Model.FileUrl.IsEmpty() == false)
            {
                <div class="form-group">
                    <label class="control-label col-md-2">Existing attachment:</label>
                    <div class="col-md-10">
                        <img src="/Assets/Images/FileIcons/@(Model.FileUrl.Split('.').Last()).png" alt="" />
                        <br />
                        @Html.ActionLink(Path.GetFileName(Model.FileUrl), "Download", "Download", new { filePath = Model.FileUrl }, null)
                    </div>
                </div>
            }
        }

        <div class="form-group">
            <label class="control-label col-md-2">Upload New Attachment:</label>
            <div class="col-md-10">
                @{
                    if (Model.FileUrl.IsEmpty() == false)
                    {
                        <p><strong>Warning: Uploading a file will erase the existing attachment!</strong></p>
                    }
                }
                <input name="uploadedFile" type="file" class="form-control" id="uploadedFile" />
                @Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Ticket Details", "Details", "Tickets", new { id = Model.TicketId }, null)
</div>

@section Scripts{
    <script>
        CKEDITOR.replace('ck-replace');
    </script>
}